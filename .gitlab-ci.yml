# SPDX-FileCopyrightText: 2021 Ren√© de Hesselle <dehesselle@web.de>
#
# SPDX-License-Identifier: GPL-2.0-or-later

# The main CI for this repository is the GitHub one, not GitLab. There is
# no feature parity between the two and that is on purpose. GitLab CI is
# used solely on a custom runner to build portions of the software natively
# on OS X 10.11 El Capitan (instead of targeting El Capitan via SDK from
# a recent OS). The things we do for backward compatibility!

variables:
  GIT_DEPTH: 1
  GIT_SUBMODULE_STRATEGY: recursive
  WRK_DIR: /Users/Shared/work
  CCACHE_DIR: /Users/Shared/work/ccache
  SDKROOT: /opt/sdks/MacOSX10.11.sdk

stages:
  - prepare
  - build

# verify SDK integrity
prepare:
  stage: prepare
  tags:
    - elcapitan
  script:
    - |
      git clone https://github.com/dehesselle/sdkchecksum
      shasum -a 256 sdkchecksum/MacOSX10.11.4.sdk.sha256
      cd $(dirname $SDKROOT)
      if shasum -s -c $CI_PROJECT_DIR/sdkchecksum/MacOSX10.11.4.sdk.sha256; then
        echo "ok - SDK verified"
        exit 0
      else
        echo "error - SDK verification failed"
        exit 1
      fi

build:
  stage: build
  tags:
    - elcapitan
# Cache will be managed manually.
#
#  cache:
#    key: mibap-cache
#    paths:
#      - '$CCACHE_DIR'
  before_script:
    - rm -rf $WRK_DIR/$(grep VERSION= 010-init.sh | awk -F '=' '{ print $2 }')
  script:
    - ./110-sysprep.sh
    - ./120-jhbuild_install.sh
    - ./130-jhbuild_bootstrap.sh
    - ./140-jhbuild_gtk3.sh
    - ./150-jhbuild_inkdeps.sh
    - ./160-jhbuild_other.sh
  after_script:
    - |
      source 010-init.sh
      toolset_create_dmg
    - rm -rf $WRK_DIR/$(grep VERSION= 010-init.sh | awk -F '=' '{ print $2 }')
  artifacts:
    paths:
      - mibap*.dmg

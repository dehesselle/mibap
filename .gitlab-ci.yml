# SPDX-FileCopyrightText: 2022 Ren√© de Hesselle <dehesselle@web.de>
#
# SPDX-License-Identifier: GPL-2.0-or-later

variables:
  GIT_DEPTH: 1
  GIT_SUBMODULE_STRATEGY: recursive
  WRK_DIR: /Users/Shared/work
  CCACHE_DIR: /Users/Shared/work/ccache

stages:
  - build
  - release

include:
  - remote: https://raw.githubusercontent.com/dehesselle/sdkchecksum/master/.gitlab-ci/verify_sdk-template.yml

#------------------------------------------------------------------------- build

.build:
  stage: build
  script:
    - !reference [ .verify_sdk, script ]
    - ./build_toolset.sh
    # I hate having to remove the contents of PKG_DIR but artifact size needs
    # to stay below 1 GiB for GitLab.
    - |
      source jhb/etc/jhb.conf.sh
      find "$SRC_DIR" -mindepth 1 -maxdepth 1 -type d ! -name 'bash_d' ! -name 'gtk-mac-bundler*' ! -name 'jhb*' ! -name 'png2icns*' -exec rm -rf {} \;
      rm -rf "${BLD_DIR:?}"/*
      find "${PKG_DIR:?}"/ -type f ! -name "python_*.tar.xz" ! -name "*.svg" ! -name "*.whl" -delete
      rm -rf "${TMP_DIR:?}"/*
      rm -rf "${VAR_DIR:?}"/cache/pip/*
      rm -rf "${VAR_DIR:?}"/cache/pycache/*
    - jhb/usr/bin/archive create_dmg
  artifacts:
    paths:
      - mibap*.dmg

build:
  extends: .build
  parallel:
    matrix:
      - RUNNER: [ "macosintel", "macosarm" ]
  rules:
    - if: $RUNNER == "macosintel"
      variables:
        SDKROOT: /opt/sdks/MacOSX10.13.4.sdk
    - if: $RUNNER == "macosarm"
      variables:
        SDKROOT: /opt/sdks/MacOSX11.3.sdk
  tags:
    - ${RUNNER}
  after_script:
    # Cleanup is necessary for persistent runners but can be disabled for
    # debugging purposes. (the number is not random, it's the project ID)
    - |
      source jhb/etc/jhb.conf.sh
      if [ ! -f "$WRK_DIR"/no_cleanup-15865869 ]; then
        rm -rf "${VER_DIR:?}"
      fi

build:gitlab:
  extends: .build
  tags:
    - shared-macos-amd64
  image: macos-10.15-xcode-11
  when: manual   # on demand only!
  variables:
    CCACHE_DIR: $CI_PROJECT_DIR/ccache
    SYS_IGNORE_USR_LOCAL: "true"
  cache:
    key: "ccache-macos"
    paths:
      - $CI_PROJECT_DIR/ccache

#----------------------------------------------------------------------- release

release:
  stage: release
  only:
    - tags
  image: python:3-alpine
  script:
    - pip3 install gitlab-release==5.6
    # requires PRIVATE_TOKEN with api permission
    - gitlab-release mibap*.dmg

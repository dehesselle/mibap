# SPDX-FileCopyrightText: 2022 Ren√© de Hesselle <dehesselle@web.de>
#
# SPDX-License-Identifier: GPL-2.0-or-later

name: toolset_validate
on:
  workflow_call:
    inputs:
      SDK_DOWNLOAD_URL_REQUIRED:
        description: "If set to true, break the build on missing SDK_DOWNLOAD_URL."
        default: false
        required: false
        type: boolean
      WRK_DIR:
        description: "Location of our work directory."
        default: /Users/Shared/work
        required: false
        type: string
      CCACHE_DIR:
        description: "Location of our ccache directory."
        default: /Users/Shared/work/ccache
        required: false
        type: string
    secrets:
      SDK_DOWNLOAD_URL:
        required: false
jobs:

  ##############################################################################

  toolset_validate:
    runs-on: macos-12
    env:
      WRK_DIR: ${{ inputs.WRK_DIR }}
      CCACHE_DIR: ${{ inputs.CCACHE_DIR }}
    steps:

      #------------------------------------------------- prepare the environment

      - name: Checkout mibap repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Create timestamp
        id: timestamp
        uses: josStorer/get-current-time@v2
        with:
          format: "YYYY-MM-DD-HH-mm-ss"

      # Create a new cache, building ontop the most recent old one.
      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-inkscape-${{ steps.timestamp.outputs.formattedTime }}
          restore-keys: ccache-inkscape-

      - name: Download toolset disk image
        uses: actions/download-artifact@v3
        with:
          name: Inkscape_build_toolset

      # We're not using 'usr/bin/archive install_dmg' here because in the past
      # GitHub has not been able to handle the union-mounted dmg+ram combo
      # reliably, often breaking a job, presumably because of resource
      # starvation.
      - name: Install toolset
        run: |
          source jhb/etc/jhb.conf.sh
          hdiutil attach $RELEASE_ARCHIVE
          mkdir -p $VER_DIR
          rsync -a /Volumes/${RELEASE_ARCHIVE%%_*}/ $VER_DIR/
          hdiutil eject /Volumes/${RELEASE_ARCHIVE%%_*}
          rm $RELEASE_ARCHIVE

      # GitHub does not provide a clean macOS installation. We need to move the
      # pre-installed components out of the way so we don't pick them up by
      # accident.
      - name: Disable /usr/local
        run: |
          cd /usr/local
          for dir in include lib share; do sudo mv $dir $dir.disabled; done

      #-------------------------------------- build Inkscape to validate toolset

      - name: Build Inkscape
        run: ./210-inkscape_build.sh

      - name: Create Inkscape application bundle
        run: ./220-inkscape_package.sh

      - name: Create Inkscape disk image
        run: ./230-inkscape_distrib.sh

      #------------------------------------------------ create Inkscape artifact

      # Restore /usr/local, GitHub actions depend on these.
      - name: Restore /usr/local
        run: for dir in /usr/local/*.disabled; do sudo mv $dir ${dir/.disabled/}; done

      - name: Upload Inkscape disk image
        uses: actions/upload-artifact@v3
        with:
          name: Inkscape_dmg
          path: Inkscape*.dmg

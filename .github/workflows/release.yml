# SPDX-FileCopyrightText: 2021 Ren√© de Hesselle <dehesselle@web.de>
#
# SPDX-License-Identifier: GPL-2.0-or-later

name: release
on:
  push:   # only run for tags
    tags:
      - 'v*'
jobs:

  ##############################################################################

  check_requirements:
    runs-on: macos-11
    steps:

      - name: checkout mibap repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: fail on missing version tag
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/github-script@v3
        with:
          script: core.setFailed("version tag not found")

      - name: get toolset version
        id: toolset
        env:
          SYS_IGNORE_USR_LOCAL: true
        run: |
          cp jhb-custom.conf.sh jhb/etc
          source jhb/etc/jhb.conf.sh
          echo "::set-output name=version::$VERSION"

      - name: get repository version tag
        id: repo
        run: echo "::set-output name=version::${GITHUB_REF##*v}"

      # Once we have established that the "toolset version" (from jhb.conf.sh)
      # matches the "repo version" (from git tag) we can safely rely on
      # "repo version" from here on.
      - name: fail on version mismatch
        if: ${{ !endsWith(github.ref, steps.toolset.outputs.version) }}
        uses: actions/github-script@v3
        with:
          script: core.setFailed("version tag mismatch")

      - name: fail on missing secret SDK_DOWNLOAD_URL
        if: env.SDK_DOWNLOAD_URL == null
        env:
          SDK_DOWNLOAD_URL: ${{ secrets.SDK_DOWNLOAD_URL }}
        uses: actions/github-script@v3
        with:
          script: core.setFailed("SDK_DOWNLOAD_URL secret not found")

  ##############################################################################

  call_build_toolset:
    uses: ./.github/workflows/build_toolset.yml
    with:
      SDK_DOWNLOAD_URL_REQUIRED: true
    secrets:
      SDK_DOWNLOAD_URL: ${{ secrets.SDK_DOWNLOAD_URL }}
    needs: check_requirements

  ##############################################################################

  call_validate_toolset:
    uses: ./.github/workflows/validate_toolset.yml
    with:
      SDK_DOWNLOAD_URL_REQUIRED: true
    secrets:
      SDK_DOWNLOAD_URL: ${{ secrets.SDK_DOWNLOAD_URL }}
    needs: call_build_toolset

  ##############################################################################

  create_release:
    runs-on: macos-11
    needs: call_validate_toolset
    env:
      WRK_DIR: /Users/Shared/work
    steps:

    #--------------------------------------------------- prepare the environment

      - name: checkout mibap repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: download toolset
        uses: actions/download-artifact@v3
        with:
          name: Inkscape_build_toolset
          path: ${{ env.WRK_DIR }}/repo

      - name: download toolset checksum
        uses: actions/download-artifact@v3
        with:
          name: Inkscape_build_toolset.sha256
          path: ${{ env.WRK_DIR }}/repo

      - name: configure toolset
        id: toolset
        run: |
          cp jhb-custom.conf.sh jhb/etc
          source jhb/etc/jhb.conf.sh
          echo "::set-output name=VERSION::$VERSION"
          echo "::set-output name=VER_DIR::$VER_DIR"
          echo "::set-output name=dmg::$RELEASE_ARCHIVE"

    #------------------------------------------------------------ create release

      - name: install toolset
        env:
          SYS_IGNORE_USR_LOCAL: true
        run: |
          ./install_toolset.sh

      - name: read jhb log
        id: jhb_log
        uses: juliangruber/read-file-action@v1
        with:
          path: ${{ steps.toolset.outputs.VER_DIR }}/var/log/jhb.log

      - name: uninstall toolset
        env:
          SYS_IGNORE_USR_LOCAL: true
        run: ./uninstall_toolset.sh

      - name: create release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Inkscape build toolset ${{ github.ref }}
          draft: true
          prerelease: false
          body: ${{ steps.jhb_log.outputs.content }}

      - name: upload toolset to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ${{ env.WRK_DIR }}/repo/${{ steps.toolset.outputs.dmg }}
          asset_name: ${{ steps.toolset.outputs.dmg }}
          asset_content_type: application/octet-stream

      - name: upload toolset checksum to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ${{ env.WRK_DIR }}/repo/${{ steps.toolset.outputs.dmg }}.sha256
          asset_name: ${{ steps.toolset.outputs.dmg }}.sha256
          asset_content_type: text/plain

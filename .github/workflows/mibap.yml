# SPDX-License-Identifier: GPL-2.0-or-later
#
# This file is part of https://github.com/dehesselle/mibap

name: mibap
on: push

# There are 2 jobs in this workflow:
#
#   - toolset
#     Build the toolset that provides all the dependencies to build Inkscape.
#     Then build Inkscape to verify that the toolset and all scripts work.
#     This is the main purpose of this workflow.
#
#   - release
#     If the current commit is tagged with a version number (tag beginning
#     with lower case "v"), create a release draft and upload the workflow
#     artifacts to it.

jobs:

################################################################################

  build:
    runs-on: macos-10.15
    env:
      WRK_DIR: /Users/Shared/work
      CCACHE_DIR: /Users/Shared/work/ccache
    steps:

    ### pre-build ##############################################################

    - name: checkout repository
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: create timestamp
      id: time
      uses: nanzm/get-time-action@v1.1
      with:
        format: "YYYY-MM-DD-HH-mm-ss"

    # Create a new cache, building ontop the most recent old one.
    - name: populate CCACHE_DIR
      id: cache
      uses: actions/cache@v2
      with:
        path: ${{ env.CCACHE_DIR }}
        key: ccache-toolset-${{ steps.time.outputs.time }}
        restore-keys: ccache-toolset-

    # GitHub does not provide old SDKs like 10.11 (from Xcode 7.3.1). There is
    # no official public download available from Apple and I don't trust 3rd
    # party sources (e.g. "phracker"), so I'm enabling this job to download
    # a compressed tarball that contains the SDK.
    # In order to use this, you need to setup a repository secret named
    # SDK_DOWNLOAD_URL and give a link to a .tar.xz file.
    - name: install macOS SDK
      env:
        SDK_DOWNLOAD_URL: ${{ secrets.SDK_DOWNLOAD_URL }}
      if: env.SDK_DOWNLOAD_URL != null
      run: |
        mkdir -p $WRK_DIR
        curl -L ${{ secrets.SDK_DOWNLOAD_URL }} | tar -C $WRK_DIR -xJp
        echo "SDKROOT=$WRK_DIR/$(basename ${SDK_DOWNLOAD_URL%%.tar.xz*})" >> $GITHUB_ENV

    ### cleanup /usr/local #####################################################

    # GitHub does not provide a clean macOS installation. We need to move the
    # pre-installed components out of the way so we don't pick them up by
    # accident.
    - name: disable /usr/local
      run: |
        cd /usr/local
        for dir in include lib share; do sudo mv $dir $dir.disabled; done

    ### build toolset ##########################################################

    - name: prepare system
      run: ./110-sysprep.sh

    - name: install JHBuild
      run: ./120-jhbuild_install.sh

    - name: bootstrap JHBuild
      run: ./130-jhbuild_bootstrap.sh

    - name: build GTK3 stack
      run: ./140-jhbuild_gtk3.sh

    - name: build Inkscape dependencies
      run: ./150-jhbuild_inkdeps.sh

    - name: install additional components
      run: ./160-jhbuild_other.sh

    ### post-build toolset #####################################################

    - name: create toolset disk image
      id: toolset
      run: |
        source 010-init.sh
        rm -rf $BLD_DIR/*
        find $SRC_DIR -mindepth 1 -maxdepth 1 -type d ! -name 'gtk-mac-bundler*' -a ! -name 'jhbuild*' -a ! -name 'png2icns*' -exec rm -rf {} \;
        cd $WRK_DIR
        hdiutil create -fs HFS+ -ov -format UDBZ -srcfolder $VERSION -volname "mibap$VERSION" $GITHUB_WORKSPACE/mibap_v${VERSION}.dmg
        shasum -a 256 $(echo $GITHUB_WORKSPACE/mibap*.dmg) > $(echo $GITHUB_WORKSPACE/mibap*.dmg).sha256
        cat $(echo $GITHUB_WORKSPACE/mibap*.sha256)
        echo "::set-output name=version::$VERSION"

    ### build Inkscape #########################################################

    - name: compile Inkscape
      run: ./210-inkscape_build.sh

    - name: create application bundle
      run: ./220-inkscape_package.sh

    - name: create disk image
      run: ./230-inkscape_distrib.sh

    ### post-build Inkscape ####################################################

    - name: move disk image to workspace
      run: |
        source 010-init.sh
        mv $ARTIFACT_DIR/Inkscape.dmg $GITHUB_WORKSPACE

    ### undo cleanup /usr/local ################################################

    # Undo what we did before, GitHub actions may depend on these.
    - name: re-enable /usr/local
      run: for dir in /usr/local/*.disabled; do sudo mv $dir ${dir/.disabled/}; done

    ### upload artifacts #######################################################

    - name: upload toolset disk image
      uses: actions/upload-artifact@v2
      with:
        name: Inkscape_build_toolset
        path: ${{ github.workspace }}/mibap_v${{ steps.toolset.outputs.version }}.dmg

    - name: upload toolset checksum
      uses: actions/upload-artifact@v2
      with:
        name: Inkscape_build_toolset.sha256
        path: ${{ github.workspace }}/mibap_v${{ steps.toolset.outputs.version }}.dmg.sha256

    - name: upload Inkscape disk image
      uses: actions/upload-artifact@v2
      with:
        name: Inkscape_dmg
        path: ${{ github.workspace }}/Inkscape.dmg

################################################################################

  release:
    runs-on: macos-10.15
    needs: toolset
    if: startsWith(github.ref, 'refs/tags/v')
    env:
      WRK_DIR: /Users/Shared/work
    steps:

    ### prepare ################################################################

    - name: checkout repository
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: download toolset
      uses: actions/download-artifact@v2
      with:
        name: Inkscape_build_toolset
        path: ${{ env.WRK_DIR }}/repo

    - name: download toolset checksum
      uses: actions/download-artifact@v2
      with:
        name: Inkscape_build_toolset.sha256
        path: ${{ env.WRK_DIR }}/repo

    - name: get toolset version
      id: toolset
      run: |
        source 010-init.sh
        echo "::set-output name=version::$VERSION"

    - name: install toolset
      run: ./install_toolset.sh

    - name: read release log
      id: release_log
      uses: juliangruber/read-file-action@v1
      with:
        path: ${{ env.WRK_DIR }}/${{ steps.toolset.outputs.version }}/var/log/release.log

    - name: uninstall toolset
      run: ./uninstall_toolset.sh

    ### release ################################################################

    - name: create release
      id: release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Inkscape build toolset ${{ github.ref }}
        draft: true
        prerelease: false
        body: ${{ steps.release_log.outputs.content }}

    - name: upload toolset to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: ${{ env.WRK_DIR }}/repo/mibap_v${{ steps.toolset.outputs.version }}.dmg
        asset_name: mibap_v${{ steps.toolset.outputs.version }}.dmg
        asset_content_type: application/octet-stream

    - name: upload toolset checksum to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: ${{ env.WRK_DIR }}/repo/mibap_v${{ steps.toolset.outputs.version }}.dmg.sha256
        asset_name: mibap_v${{ steps.toolset.outputs.version }}.dmg.sha256
        asset_content_type: text/plain